@model Manager.ViewModel.Product.UpdateProductInput

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<script src="~/Scripts/Script.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>PRODUCT</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.NAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NAME, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NAME, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.AVATAR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AVATAR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AVATAR, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.QUANTITY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QUANTITY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QUANTITY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PRICE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PRICE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DESCRIPTION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IMAGE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img src="@Url.Content(Model.IMAGE)" style="height:200px; width:200px; margin:10px;" id="previewImg" />
            <input type="file" name="UploadImage" onchange="ChangeImage(this, document.getElementById('previewImg'))" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDCATEGORY, htmlAttributes: new { @class = "control-label col-md-2" })
        @*<div class="col-md-10">
                @Html.EditorFor(model => model.CATEGORYNAME, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CATEGORYNAME, "", new { @class = "text-danger" })
            </div>*@
        <div class="col-md-10">
            @Html.DropDownList("IDCategory", (IEnumerable<SelectListItem>)ViewBag.Categories, "Chọn loại", new { @class = "form -control" })
            @Html.ValidationMessageFor(model => model.IDCATEGORY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
